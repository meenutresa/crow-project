from django.core.validators import email_re
import sys
from django.http import HttpResponse
from django.shortcuts import render_to_response,redirect
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
from shout.settings import MEDIA_URL
from crow.models import item,profile
from django.views.decorators.csrf import csrf_exempt
from django.core.files.base import ContentFile
#
import base64
#
from crow.forms import uploadImageForm
from django.shortcuts import get_object_or_404
from django.contrib.auth import authenticate, login
from django.contrib.auth.models import User 
from django.template import RequestContext
from django.contrib.auth.decorators import login_required
from django.utils.html import escape
from django.contrib.auth import logout

# deals with single image links
def viewSingleItem(request,reqId):
    #do something to clear the name string. refer appengine
    reqId=escape(reqId)
    currImage=get_object_or_404(item,id=reqId)
    user=request.user
    return render_to_response('site/singleImage.html',{'img':currImage,'user':user})

def viewLoginAddonImage(request):
    if (request.method =='POST'):
        username=escape(request.POST['username'])
        password=escape(request.POST['password'])   #do it with django forms
        user=authenticate(username=username, password=password)
        if user is not None:
            if user.is_active:
                login(request, user)
                return redirect('/imagesubmit/')
                
            else:
                pass
                # Return a 'disabled account' error message
    else:
        return render_to_response('site/login.html',context_instance=RequestContext(request))

    
def viewLoginAddonVideo(request):
    if (request.method =='POST'):
        username=escape(request.POST['username'])
        password=escape(request.POST['password'])   #do it with django forms
        user=authenticate(username=username, password=password)
        if user is not None:
            if user.is_active:
                login(request, user)
                return redirect('/videosubmit/')
                
            else:
                pass
                # Return a 'disabled account' error message
    else:
        return render_to_response('site/login.html',context_instance=RequestContext(request))

def viewLoginError(request):
    return HttpResponse("Login Error")

@csrf_exempt
@login_required(login_url='/app-login1')
def viewSubmitImage(request):
    if (request.method=='POST'):
        if request.POST.get('file') and request.POST.get('url'):
            img=base64.b64decode(request.POST.get('file'))
        else:
            return HttpResponse(" conversion failed ");
        form=uploadImageForm(request.POST)
        if form.is_valid():
            image=item(
                text=form.cleaned_data["text"],
                url=form.cleaned_data["url"],
                user=request.user,
                isImage=True,)
            image.image.save("img.jpeg",ContentFile(img),save=True)
            image.save()
            return redirect("/login-error") #say thank you
    else:    
        return render_to_response('site/clip.html',context_instance=RequestContext(request))





@login_required(login_url='/app-login2')
def viewSubmitVideo(request):
    return HttpResponse(" Submit form")


def viewLogoutAddon(request):
    logout(request)
    return HttpResponse("Logged out")

